---
swagger: "2.0"
info:
  description: "Task management tool"
  version: "1.0.0"
  title: "Task Dashboard"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "lingchao87@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/v2/api"
tags:
- name: "task"
  description: "Everything about your tasks"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /tasks:
    post:
      tags:
      - "task"
      summary: "Add a new task to the dashboard"
      description: ""
      operationId: "creatTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be added to the dashboard"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "Update Sccussfully"
    get:
      tags:
      - "task"
      summary: "Get all the tasks based on filter"
      description: "Get all the tasks based on filter"
      operationId: "filterTasks"
      produces:
      - "application/json"
      parameters:
      - name: "filters"
        in: "query"
        description: "Filters for tasks"
        type: "array"
        items:
          type: "string"
          default: "available"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        400:
          description: "Invalid status value"
  /task/{taskId}:
    get:
      tags:
      - "task"
      summary: "Find task by ID"
      description: "Returns a single task"
      operationId: "getTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Task not found"
    post:
      tags:
      - "task"
      summary: "Updates a task in the dashboard with json data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "subject"
        in: "formData"
        description: "Updated subject of the task"
        required: false
        type: "string"
      - name: "description"
        in: "formData"
        description: "Updated description of the task"
        required: false
        type: "string"
      - name: "taskDate"
        in: "formData"
        description: "Updated taskDate of the task"
        required: false
        type: "integer"
      - name: "completedPct"
        in: "formData"
        description: "Updated completed percentage of the task"
        required: false
        type: "integer"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    delete:
      tags:
      - "task"
      summary: "Deletes a task"
      description: ""
      operationId: "deleteTask"
      parameters:
      - name: "taskId"
        in: "path"
        description: "Task id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      
definitions:
  Task:
    type: "object"
    required:
    - "subject"
    properties:
      _id:
        type: "string"
        format: "sdfas1312adsfadsf"
      subject:
        type: "string"
        example: "Task 1"
      description:
        type: "string"
        example: "Task description"
      _user:
        type: "string"
        example: "asdf123fgsdfg"
      _assignTo:
        type: "string"
        example: "asdf123fgsdfg"
      status:
        type: "integer"
        description: "1"
      createdDate:
        type: "string"
        format: "date-time"
      taskDate:
        type: "integer"
        example: "123123124125"
      completedPct:
        type: "integer"
        example: "10"
    xml:
      name: "Task"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
